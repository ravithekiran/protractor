{
  "_args": [
    [
      {
        "escapedName": "objects",
        "name": "objects",
        "raw": "objects",
        "rawSpec": "",
        "scope": null,
        "spec": "latest",
        "type": "tag"
      },
      "E:\\protractortests"
    ]
  ],
  "_from": "objects@latest",
  "_id": "objects@0.3.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/objects",
  "_npmUser": {
    "email": "developers@circuithub.com",
    "name": "circuithub"
  },
  "_npmVersion": "1.3.2",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "objects",
    "name": "objects",
    "raw": "objects",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/objects/-/objects-0.3.0.tgz",
  "_shasum": "c12f0b3aa4fcbbfa7bf41263bbed9b17b464148e",
  "_shrinkwrap": null,
  "_spec": "objects",
  "_where": "E:\\protractortests",
  "author": {
    "email": "developers@circuithub.com",
    "name": "CircuitHub",
    "url": "circuithub.com"
  },
  "bugs": {
    "url": "https://github.com/circuithub/node-files/issues"
  },
  "dependencies": {
    "coffee-script": ">=1.3.3",
    "objectdiff": ">=1.0.0",
    "underscore": ">=1.3.3",
    "underscore.string": "git+https://github.com/epeli/underscore.string.git#master"
  },
  "description": "Simple objects' utilities for Node.js",
  "devDependencies": {
    "mocha": ">=1.2.1",
    "should": ">=0.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "c12f0b3aa4fcbbfa7bf41263bbed9b17b464148e",
    "tarball": "https://registry.npmjs.org/objects/-/objects-0.3.0.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/circuithub/node-files#readme",
  "main": "./index.coffee",
  "maintainers": [
    {
      "email": "developers@circuithub.com",
      "name": "circuithub"
    }
  ],
  "name": "objects",
  "optionalDependencies": {},
  "readme": "node-objects\n==========\n\nSimple objects' utilities for Node.js\n\n# Overview\n\nSimple utility libraries that have common methods to deal with objects.\n\n## Use\n\nInstall\n\n`npm install objects`\n\n\nCode\n\n```coffeescript\nobjects = require \"objects\"\n```\n\nThat's easy!\n\n# The Library\n\n## type (type of variable)\n\nReport the type of the variable safely as a string. \n\nPossible return values:\n\n* ```undefined```, ```null```\n* ```boolean```, ```number```, ```string```, ```function```, ```array```, ```date```, ```regexp```\n* ```object```\n\n```coffeescript\nexports.type = (obj) ->\n```\n\n## mergeArrays\n\nMerge two array into one.\n\n```\nexports.mergeArrays = (first, second) -> Array::push.apply first, second\n```\n\n## plainProperties\n\nGet only plain properties from object and skip nested objects.\n\n```\nexports.plainProperties = (object) ->\n```\n\n## onlyData\n\nRemoves all functions (and other non-JSON-safe types) from keys (deep search)\n\n* Cannot handle circlar references\n* Internal deep clone (returns a new object, non-destructive to original)\n\n```\nexports.onlyData = (object) =>\n```\n\n## diff (object difference, see subtract for changelog)\n\n* Find differences between two objects.\n\n```coffeescript\nexports.diff = (object1, object2) ->\n```\n\n## subtract (Change Log)\n\n* Find and characterize the differences between two objects\n* Report polarity is oriented such that A = new state and B = prior state (e.g. A - B) \n* Report identifies the changes that need to be applied to the prior state (B) to reach the new state (A)\n* A-B=C --> B+C=A; A = new state, B = prior state, C = results from subtract(A,B) \n\n```coffeescript\n  a = {\n    aa: 2\n    ab: {a:1, c:3}\n  }\n  b = {\n    aa: 1\n    ab: {a:1, b:2, c:3}\n  }\n  objects.subtract a, b\n```\n\nresults in a return object of:\n\n```coffeescript\n{\n    added: {}\n    changed: { aa: 2 }\n    removed: { ab: { b: 2 } }\n    numChanged: \n      {\n        add: 0\n        modify: 1\n        removed: 1\n        total: 2\n      }\n}\n```\n\n## merge (deep extend)\n\nDeep object extension (merge).\n\n* Priority of objects is right-to-left; first param is overwritten by second param, etc...\n* Based conceptually on the _.extend() function in underscore.js ( http://documentcloud.github.com/underscore/#extend )\n* From deepExtend gist by author: Kurt Milam - http://xioup.com\n* https://gist.github.com/1868955 \n\n```coffeescript\nmergedObject = objects.merge(grandparent, child, grandchild, greatgrandchild)\n```\n\n## clone (deep copy)\n\nDeep clone\n\n```coffeescript\nexports.clone = (obj) ->\n```\n\n## find\n\nFind a specific object in an array of objects where a specific property equals a specific value.\n\n* Returns undefined if not found.\n* Pass by reference - objects are reference in, reference out (deep copy, see clone(..), the return value if so desired)\n* Short circuit analysis - returns only the first object found in array index ascending order \n\nUsage: theContainedObject = objects.find(myArray, \"id\", 4)\n\n```coffeescript\nexports.find = (array, property, value) ->\n```\n\n## findIndex\n\nFind a specific object in an array of objects where a specific property equals a specific value.\n\n* Returns undefined if not found. Returns the index of the location otherwise.\n* Pass by reference - objects are reference in, reference out (deep copy, see clone(..), the return value if so desired)\n* Short circuit analysis - returns only the first object found in array index ascending order \n       \nUsage: theContainedObject = objects.findIndex(myArray, \"id\", 4)\n\n```coffeescript\nexports.findIndex = (array, property, value) ->\n```\n\n## prefix\n\nAdd a prefix to the name of all properties of an Object. \n\n* Useful for avoiding collisions when merging/extending objects. \n* Follows lowerCamel convention\n\n```coffeescript\nexports.prefix = (theObject, prefix) ->\n```\n\n## write\n\nPretty print an object to disk. \n\n* Useful for deep visualization/inspection during development/test.\n\n```coffeescript\nexports.write = (theObject, filename) ->\n  fs.writeFileSync filename, JSON.stringify theObject, undefined, \"\\t\"\n```\n\n## stringify\n\nObject to JSON string\n\n* Handles error objects that get mangled by JSON.stringify\n\n```coffeescript\nexports.stringify = (theObject) ->\n```\n\n# Contributions\n\nIf you need any feature tell us or fork project and implement it by yourself.\n\nWe appreciate feedback!\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 CircuitHub., https://circuithub.com/\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/circuithub/node-files.git"
  },
  "version": "0.3.0"
}
